// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`edit_button component matches the snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <button
    aria-label="Edit assessment"
    className="au-c-btn au-c-btn--square au-c-btn--table "
    disabled={false}
    onClick={undefined}
    onFocus={[Function]}
>
    <svg
        className="svg-24px"
    >
        <use
            href="/icons/MaterialDesign-svg-sprite-image-symbol.svg#ic_edit_24px"
        />
    </svg>
</button>,
  "nodes": Array [
    <button
      aria-label="Edit assessment"
      className="au-c-btn au-c-btn--square au-c-btn--table "
      disabled={false}
      onClick={undefined}
      onFocus={[Function]}
>
      <svg
            className="svg-24px"
      >
            <use
                  href="/icons/MaterialDesign-svg-sprite-image-symbol.svg#ic_edit_24px"
            />
      </svg>
</button>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <EditButton
        assessment={
                Object {
                        "isPublished": false,
                      }
        }
        onFocus={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "assessment": Object {
            "isPublished": false,
          },
          "onFocus": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <button
          aria-label="Edit assessment"
          className="au-c-btn au-c-btn--square au-c-btn--table "
          disabled={false}
          onClick={undefined}
          onFocus={[Function]}
>
          <svg
                    className="svg-24px"
          >
                    <use
                              href="/icons/MaterialDesign-svg-sprite-image-symbol.svg#ic_edit_24px"
                    />
          </svg>
</button>,
        "_debugID": 2,
        "_renderedOutput": <button
          aria-label="Edit assessment"
          className="au-c-btn au-c-btn--square au-c-btn--table "
          disabled={false}
          onClick={undefined}
          onFocus={[Function]}
>
          <svg
                    className="svg-24px"
          >
                    <use
                              href="/icons/MaterialDesign-svg-sprite-image-symbol.svg#ic_edit_24px"
                    />
          </svg>
</button>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <EditButton
    assessment={
        Object {
            "isPublished": false,
          }
    }
    onFocus={[Function]}
/>,
}
`;
